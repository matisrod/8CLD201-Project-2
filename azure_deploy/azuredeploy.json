{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // Les parametres de notre fichier de deploiement
    "storageAccounts_golemsa_name": {
      "type": "String",
      "defaultValue": "parameters('storageAccounts_golemsa_name')"
    },
    "namespaces_golemsb_name": {
      "type": "String",
      "defaultValue": "parameters('namespaces_golemsb_name')"
    },
    "functionApp_name": {
      "type": "String",
      "defaultValue": "parameters('functionApp_name')"
    },
    "hostingPlan_name": {
      "type": "String",
      "defaultValue": "parameters('hostingPlan_name')"
    },
    "location": {
      "type": "String",
      "defaultValue": "parameters('location')"
    }
  },
  "variables": {
    "storageAccountName": "[parameters('storageAccounts_golemsa_name')]",
    "functionAppName": "[parameters('functionApp_name')]",
    "hostingPlanName": "[parameters('hostingPlan_name')]"
  },
  "resources": [
    {
      // Création du storage account
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      // Création de la policy pour le storage account
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[concat(parameters('storageAccounts_golemsa_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_golemsa_name'))]"
      ],
      "properties": {
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      // création de l'initial container
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[concat(parameters('storageAccounts_golemsa_name'), '/default/initialcontainer')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_golemsa_name'), 'default')]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      // création du final container
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[concat(parameters('storageAccounts_golemsa_name'), '/default/finalcontainer')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_golemsa_name'), 'default')]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      // Création du service bus
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2023-01-01-preview",
      "name": "[parameters('namespaces_golemsb_name')]",
      "location": "canadacentral",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "geoDataReplication": {
          "maxReplicationLagDurationInSeconds": 0,
          "locations": [
            {
              "locationName": "canadacentral",
              "roleType": "Primary"
            }
          ]
        },
        "premiumMessagingPartitions": 0,
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": false,
        "zoneRedundant": true
      }
    },
    {
      // Création des autorisations necessaires pour le service bus
      "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
      "apiVersion": "2023-01-01-preview",
      "name": "[concat(parameters('namespaces_golemsb_name'), '/RootManageSharedAccessKey')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_golemsb_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues/authorizationrules",
      "apiVersion": "2023-01-01-preview",
      "name": "[concat(parameters('namespaces_golemsb_name'), '/messagequeue/AccessPolicy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('namespaces_golemsb_name'), 'messagequeue')]"
      ],
      "properties": {
        "rights": [
          "Manage",
          "Listen",
          "Send"
        ]
      }
    },
    {
      // Création de la queue
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2023-01-01-preview",
      "name": "[concat(parameters('namespaces_golemsb_name'), '/messagequeue')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_golemsb_name'))]"
      ],
      "properties": {
        "maxMessageSizeInKilobytes": 256,
        "lockDuration": "PT1M",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "defaultMessageTimeToLive": "P14D",
        "deadLetteringOnMessageExpiration": false,
        "enableBatchedOperations": true,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "maxDeliveryCount": 10,
        "status": "Active",
        "enablePartitioning": false,
        "enableExpress": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-11-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      // Création de la fonction app qui va host les functions 1 et 2
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
          ]
        },
        "httpsOnly": true
      }
    }
  ],
  // Les outputs qui seront renvoyés a la fin du déploiement (les connexion strings)
  "outputs": {
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
    },
    "serviceBusConnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('namespaces_golemsb_name'), 'RootManageSharedAccessKey'), '2023-01-01-preview').primaryConnectionString]"
    }
  }
}
